// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class Claimed extends ethereum.Event {
  get params(): Claimed__Params {
    return new Claimed__Params(this);
  }
}

export class Claimed__Params {
  _event: Claimed;

  constructor(event: Claimed) {
    this._event = event;
  }

  get account(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class TGEVestingContract extends ethereum.SmartContract {
  static bind(address: Address): TGEVestingContract {
    return new TGEVestingContract("TGEVestingContract", address);
  }

  endTimestamp(): BigInt {
    let result = super.call("endTimestamp", "endTimestamp():(uint256)", []);

    return result[0].toBigInt();
  }

  try_endTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("endTimestamp", "endTimestamp():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  latestClaim(param0: Address): BigInt {
    let result = super.call("latestClaim", "latestClaim(address):(uint256)", [
      ethereum.Value.fromAddress(param0),
    ]);

    return result[0].toBigInt();
  }

  try_latestClaim(param0: Address): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "latestClaim",
      "latestClaim(address):(uint256)",
      [ethereum.Value.fromAddress(param0)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  pendingZF(_user: Address, _amount: BigInt): BigInt {
    let result = super.call(
      "pendingZF",
      "pendingZF(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_amount),
      ],
    );

    return result[0].toBigInt();
  }

  try_pendingZF(_user: Address, _amount: BigInt): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "pendingZF",
      "pendingZF(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(_user),
        ethereum.Value.fromUnsignedBigInt(_amount),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  startTimestamp(): BigInt {
    let result = super.call("startTimestamp", "startTimestamp():(uint256)", []);

    return result[0].toBigInt();
  }

  try_startTimestamp(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "startTimestamp",
      "startTimestamp():(uint256)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  tokenAddress(): Address {
    let result = super.call("tokenAddress", "tokenAddress():(address)", []);

    return result[0].toAddress();
  }

  try_tokenAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall("tokenAddress", "tokenAddress():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  totalReward(): BigInt {
    let result = super.call("totalReward", "totalReward():(uint256)", []);

    return result[0].toBigInt();
  }

  try_totalReward(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("totalReward", "totalReward():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  verifyClaim(
    _account: Address,
    _amount: BigInt,
    _merkleProof: Array<Bytes>,
  ): boolean {
    let result = super.call(
      "verifyClaim",
      "verifyClaim(address,uint256,bytes32[]):(bool)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromFixedBytesArray(_merkleProof),
      ],
    );

    return result[0].toBoolean();
  }

  try_verifyClaim(
    _account: Address,
    _amount: BigInt,
    _merkleProof: Array<Bytes>,
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "verifyClaim",
      "verifyClaim(address,uint256,bytes32[]):(bool)",
      [
        ethereum.Value.fromAddress(_account),
        ethereum.Value.fromUnsignedBigInt(_amount),
        ethereum.Value.fromFixedBytesArray(_merkleProof),
      ],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  zfPerSecond(): BigInt {
    let result = super.call("zfPerSecond", "zfPerSecond():(uint256)", []);

    return result[0].toBigInt();
  }

  try_zfPerSecond(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("zfPerSecond", "zfPerSecond():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _totalReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _tokenAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get _merkleRoot(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ClaimCall extends ethereum.Call {
  get inputs(): ClaimCall__Inputs {
    return new ClaimCall__Inputs(this);
  }

  get outputs(): ClaimCall__Outputs {
    return new ClaimCall__Outputs(this);
  }
}

export class ClaimCall__Inputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }

  get _account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _merkleProof(): Array<Bytes> {
    return this._call.inputValues[2].value.toBytesArray();
  }
}

export class ClaimCall__Outputs {
  _call: ClaimCall;

  constructor(call: ClaimCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetEndTimeCall extends ethereum.Call {
  get inputs(): SetEndTimeCall__Inputs {
    return new SetEndTimeCall__Inputs(this);
  }

  get outputs(): SetEndTimeCall__Outputs {
    return new SetEndTimeCall__Outputs(this);
  }
}

export class SetEndTimeCall__Inputs {
  _call: SetEndTimeCall;

  constructor(call: SetEndTimeCall) {
    this._call = call;
  }

  get _endTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEndTimeCall__Outputs {
  _call: SetEndTimeCall;

  constructor(call: SetEndTimeCall) {
    this._call = call;
  }
}

export class SetMerkleRootCall extends ethereum.Call {
  get inputs(): SetMerkleRootCall__Inputs {
    return new SetMerkleRootCall__Inputs(this);
  }

  get outputs(): SetMerkleRootCall__Outputs {
    return new SetMerkleRootCall__Outputs(this);
  }
}

export class SetMerkleRootCall__Inputs {
  _call: SetMerkleRootCall;

  constructor(call: SetMerkleRootCall) {
    this._call = call;
  }

  get _merkleRoot(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class SetMerkleRootCall__Outputs {
  _call: SetMerkleRootCall;

  constructor(call: SetMerkleRootCall) {
    this._call = call;
  }
}

export class SetRewardRateCall extends ethereum.Call {
  get inputs(): SetRewardRateCall__Inputs {
    return new SetRewardRateCall__Inputs(this);
  }

  get outputs(): SetRewardRateCall__Outputs {
    return new SetRewardRateCall__Outputs(this);
  }
}

export class SetRewardRateCall__Inputs {
  _call: SetRewardRateCall;

  constructor(call: SetRewardRateCall) {
    this._call = call;
  }

  get _zfPerSecond(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetRewardRateCall__Outputs {
  _call: SetRewardRateCall;

  constructor(call: SetRewardRateCall) {
    this._call = call;
  }
}

export class SetStartTimeCall extends ethereum.Call {
  get inputs(): SetStartTimeCall__Inputs {
    return new SetStartTimeCall__Inputs(this);
  }

  get outputs(): SetStartTimeCall__Outputs {
    return new SetStartTimeCall__Outputs(this);
  }
}

export class SetStartTimeCall__Inputs {
  _call: SetStartTimeCall;

  constructor(call: SetStartTimeCall) {
    this._call = call;
  }

  get _startTime(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetStartTimeCall__Outputs {
  _call: SetStartTimeCall;

  constructor(call: SetStartTimeCall) {
    this._call = call;
  }
}

export class SetTotalRewardCall extends ethereum.Call {
  get inputs(): SetTotalRewardCall__Inputs {
    return new SetTotalRewardCall__Inputs(this);
  }

  get outputs(): SetTotalRewardCall__Outputs {
    return new SetTotalRewardCall__Outputs(this);
  }
}

export class SetTotalRewardCall__Inputs {
  _call: SetTotalRewardCall;

  constructor(call: SetTotalRewardCall) {
    this._call = call;
  }

  get _totalReward(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetTotalRewardCall__Outputs {
  _call: SetTotalRewardCall;

  constructor(call: SetTotalRewardCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class WithdrawTokenCall extends ethereum.Call {
  get inputs(): WithdrawTokenCall__Inputs {
    return new WithdrawTokenCall__Inputs(this);
  }

  get outputs(): WithdrawTokenCall__Outputs {
    return new WithdrawTokenCall__Outputs(this);
  }
}

export class WithdrawTokenCall__Inputs {
  _call: WithdrawTokenCall;

  constructor(call: WithdrawTokenCall) {
    this._call = call;
  }

  get _token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _amount(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class WithdrawTokenCall__Outputs {
  _call: WithdrawTokenCall;

  constructor(call: WithdrawTokenCall) {
    this._call = call;
  }
}
